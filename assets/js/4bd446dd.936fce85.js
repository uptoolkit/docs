(self.webpackChunkup_docs=self.webpackChunkup_docs||[]).push([[243],{9666:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>l});var a=n(7462),s=(n(7294),n(3905)),r=n(3456);const o={sidebar_position:1},i="Database",u={unversionedId:"conventions/database",id:"conventions/database",title:"Database",description:"Every templates come with a very opinionated database structure that you cannot change. It allows to make some core concepts working amongst the time and frameworks so you cannot change that.",source:"@site/docs/conventions/database.md",sourceDirName:"conventions",slug:"/conventions/database",permalink:"/docs/docs/conventions/database",draft:!1,editUrl:"https://github.com/uptoolkit/docs/tree/main/docs/docs/conventions/database.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Conventions over configuration",permalink:"/docs/docs/conventions/Default"},next:{title:"Structure",permalink:"/docs/docs/conventions/structure"}},c={},l=[{value:"Users table",id:"users-table",level:2}],d={toc:l};function m(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"database"},"Database"),(0,s.kt)("p",null,"Every templates come with a very opinionated database structure that you cannot change. It allows to make some core concepts working amongst the time and frameworks so you cannot change that."),(0,s.kt)("h2",{id:"users-table"},"Users table"),(0,s.kt)("p",null,"Every toolkit have a concept of user."),(0,s.kt)("p",null,"Structure : "),(0,s.kt)(r.Mermaid,{config:{},chart:'erDiagram\n  User ||--|{ Account : ""\n  User {\n  string id\n  string name\n  string email\n  timestamp emailVerified\n  string image\n  }\n  User ||--|{ Session : ""\n  Session {\n  string id\n  timestamp expires\n  string sessionToken\n  string userId\n  }\n  Account {\n  string id\n  string userId\n  string type\n  string provider\n  string providerAccountId\n  string refresh_token\n  string access_token\n  int expires_at\n  string token_type\n  string scope\n  string id_token\n  string session_state\n  string oauth_token_secret\n  string oauth_token\n  }\n  VerificationToken {\n  string identifier\n  string token\n  timestamp expires\n  }',mdxType:"Mermaid"}),(0,s.kt)("p",null,"Users:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"id: reference (could be an integer or uid)"),(0,s.kt)("li",{parentName:"ul"},"name: full name of the user"),(0,s.kt)("li",{parentName:"ul"},"password: password of the user"),(0,s.kt)("li",{parentName:"ul"},"last_name : last name of the user"),(0,s.kt)("li",{parentName:"ul"},"first_name : first name of the user"),(0,s.kt)("li",{parentName:"ul"},"email_verified_at"),(0,s.kt)("li",{parentName:"ul"},"language : the current user language in iso format"),(0,s.kt)("li",{parentName:"ul"},"created_at : created at time in YYYY-mm-dd H:i:s format"),(0,s.kt)("li",{parentName:"ul"},"updated_at : updated time in YYYY-mm-dd H:i:s format")),(0,s.kt)("p",null,"Not mandatory but normalised"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"image : the picture of the user (in a string format and full path)")))}m.isMDXComponent=!0},1748:(e,t,n)=>{var a={"./locale":9234,"./locale.js":9234};function s(e){var t=r(e);return n(t)}function r(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}s.keys=function(){return Object.keys(a)},s.resolve=r,e.exports=s,s.id=1748}}]);